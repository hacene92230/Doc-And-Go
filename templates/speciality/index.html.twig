    <section class="bg-teal-50 p-8">
        <h1 class="text-center font-bold text-3xl mt-6">Nos spécialités médicales</h1>
        <p class="text-center font-medium text-lg mt-2 mb-6">Trouvez la spécialité que vous voulez en utilisant le filtre de recherche ci-dessous, en triant par ordre alphabétique, ou en filtrant par lettre.</p>

<div>

        <div class="max-w-md mx-auto mb-10">
            <input type="text" id="searchSpeciality" placeholder="Rechercher une spécialité..." class="w-full px-4 py-2 border rounded-lg shadow-sm focus:outline-none focus:border-indigo-600">
        </div>

<button id="toggle-speciality"></button>

<div  id="show-speciality" style="display: none;">
<div>
{# Bouton pour aller au début de la liste #}
<button class=" bg-gray-50 py-2 px-2 rounded shadow cursor-pointer" id="goToTop">Aller au début</button>

{# Bouton pour aller à la fin de la liste #}
<button class=" bg-gray-50 py-2 px-2 rounded shadow cursor-pointer" id="goToBottom">Aller à la fin</button>

</div>

        <div class="text-center mb-6 flex justify-center items-center">
            <button id="sortAsc" class="filter-button bg-gray-50 py-2 px-2 rounded shadow cursor-pointer" aria-pressed="false">Ordre croissant (A-Z)</button>
            <button id="sortDesc" class="filter-button bg-gray-50 py-2 px-2 rounded shadow cursor-pointer" aria-pressed="false">Ordre décroissant (Z-A)</button>
        </div>

        <div class="text-center mb-6">
            <select id="filterLetter" class="filter-button bg-gray-50 py-2 px-2 rounded shadow cursor-pointer" aria-selected="false">
                <option value="">Filtrer par lettre</option>
                {% for letter in specialitiesByLetter|keys %}
                    <option value="{{ letter }}" class="bg-white text-black">{{ letter }}</option>
                {% endfor %}
            </select>
 <div class="">
 <div class="flex justify-center m-2">
        <button id="prevPage" class="bg-teal-600 hover:bg-teal-700 cursor-pointer text-white font-bold py-2 px-4 rounded-l-lg focus:outline-none">Précédent</button>
        <button id="nextPage" class="bg-teal-600 hover:bg-teal-700 cursor-pointer text-white font-bold py-2 px-4 rounded-r-lg focus:outline-none">Suivant</button>
    </div>
        <label for="itemsPerPage" class="mr-2 m-2 text-teal-800">Éléments par page :</label>
        <select id="itemsPerPage" class="border border-teal-300 text-teal-800 py-2 px-4 rounded-lg shadow-sm cursor-pointer focus:outline-none">
            <option value="6">6</option>
            <option value="10">10</option>
            <option value="15">15</option>
        </select>
    </div>
</div>
</div>
     
        <div id="allSpecialities" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 mt-10">
            {% for letter, specialities in specialitiesByLetter %}
                {% for speciality in specialities %}
                    <div class="speciality-item p-4 border rounded-lg shadow-sm bg-white" data-name="{{ speciality.name }}" data-letter="{{ letter }}">
                        <h3 class="text-xl font-semibold">{{ speciality.name }}</h3>
                        <p class="mt-2">description speciality {{ speciality.id }}</p>
<button class="text-white my-2 bg-teal-500 rounded shadow-sm hover:bg-teal-600 py-2 px-4" onclick="window.location='{{ path('app_speciality_show', {'id': speciality.id}) }}'">
                            Praticiens associés
                        </button>
                    </div>
                {% endfor %}
            {% endfor %}
        </div>
    </section>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
$(document).ready(function () {

// Fonction pour normaliser une chaîne de caractères en enlevant les accents
function normalizeString(str) {
    return str.normalize('NFD').replace(/[\u0300-\u036f]/g, '');
}

// Fonction pour la recherche de spécialité
function searchSpeciality() {
    const searchValue = normalizeString($('#searchSpeciality').val().trim().toLowerCase());

    if (searchValue === '') {
            specialityItems.hide(); // Cache tous les éléments
            specialityItems.slice(0, 6).show(); // Affiche les 6 premiers éléments
    } else {
        specialityItems.each(function () {
            const specialityName = normalizeString($(this).data("name").toLowerCase());
            if (specialityName.includes(searchValue)) {
                $(this).show();
            } else {
                $(this).hide();
            }
        });
    }
}

// Associer la fonction de recherche à l'événement de changement du champ de recherche
$('#searchSpeciality').on('input', function () {
    searchSpeciality();
});

    // Afficher / masquer la div avec l'id "chat-container"
    $('#toggle-speciality').click(function() {
        $('#show-speciality').toggle();
        const buttonText = $('#show-speciality').is(':visible') ? 'fermer les filtres' : 'Ouvrir les filtres';
        $('#toggle-speciality').text(buttonText);
    });

    // Définir le texte initial du bouton
    $('#toggle-speciality').text('Ouvrir les filtres');


    // Fonction pour gérer le focus après le changement de page
    function focusOnTop() {
        const pageTitle = $('h1');
        if (pageTitle.length > 0) {
            pageTitle[0].scrollIntoView();
            pageTitle.focus();
        }
    }

    // Pagination
    const prevPageBtn = $("#prevPage");
    const nextPageBtn = $("#nextPage");
    const goToTopBtn = $("#goToTop");
    const goToBottomBtn = $("#goToBottom");

    const allSpecialities = $("#allSpecialities");
    const specialityItems = $(".speciality-item");

    let currentPage = 1;
    let itemsPerPage = parseInt($("#itemsPerPage").val());
    let totalItems = specialityItems.length;
    let totalPages = Math.ceil(totalItems / itemsPerPage);

    // Fonction pour afficher les éléments de la page actuelle
    function showPage(page) {
        const startIndex = (page - 1) * itemsPerPage;
        const endIndex = Math.min(startIndex + itemsPerPage, totalItems); // Correction pour la dernière page

        specialityItems.each(function (index) {
            if (index >= startIndex && index < endIndex) {
                $(this).css("display", "block");
            } else {
                $(this).css("display", "none");
            }
        });

        // Désactiver le bouton "Précédent" si nous sommes déjà sur la première page
        prevPageBtn.prop("disabled", currentPage === 1);

        // Désactiver le bouton "Suivant" si nous sommes déjà sur la dernière page
        nextPageBtn.prop("disabled", currentPage === totalPages);

        // Désactiver le bouton "Aller au début" si nous sommes déjà à la première page
        goToTopBtn.prop("disabled", currentPage === 1);

        // Désactiver le bouton "Aller à la fin" si nous sommes déjà à la dernière page
        goToBottomBtn.prop("disabled", currentPage === totalPages);
    }

    // Initialisation : afficher la première page
    showPage(currentPage);

    // Gestion des événements pour la pagination
    prevPageBtn.on("click", function () {
        if (currentPage > 1) {
            currentPage--;
            showPage(currentPage);
            focusOnTop();
        }
    });

    nextPageBtn.on("click", function () {
        if (currentPage < totalPages) {
            currentPage++;
            showPage(currentPage);
            focusOnTop();
        }
    });

    // Gestion du bouton "Aller au début"
    goToTopBtn.on("click", function () {
        currentPage = 1;
        showPage(currentPage);
        focusOnTop();
    });

    // Gestion du bouton "Aller à la fin"
    goToBottomBtn.on("click", function () {
        currentPage = totalPages;
        showPage(currentPage);
        focusOnTop();
    });

    // Gestion du changement d'éléments par page
    const itemsPerPageSelect = $("#itemsPerPage");
    itemsPerPageSelect.on("change", function () {
        itemsPerPage = parseInt($(this).val());
        currentPage = 1;
        totalPages = Math.ceil(totalItems / itemsPerPage);
        showPage(currentPage);
        focusOnTop();
    });

    // Accessibilité : Ajouter les attributs ARIA pour les boutons de tri
    const sortAscBtn = $("#sortAsc");
    const sortDescBtn = $("#sortDesc");

    sortAscBtn.attr("aria-label", "Trier par ordre croissant (A-Z)");
    sortDescBtn.attr("aria-label", "Trier par ordre décroissant (Z-A)");

    // Fonction de tri par ordre alphabétique croissant
    function sortAscending() {
        const sortedItems = Array.from(specialityItems).sort((a, b) => {
            return a.textContent.localeCompare(b.textContent);
        });
        allSpecialities.html("");
        sortedItems.forEach(item => allSpecialities.append(item));
    }

    // Fonction de tri par ordre alphabétique décroissant
    function sortDescending() {
        const sortedItems = Array.from(specialityItems).sort((a, b) => {
            return b.textContent.localeCompare(a.textContent);
        });
        allSpecialities.html("");
        sortedItems.forEach(item => allSpecialities.append(item));
    }

    // Gestion des événements pour les boutons de tri
    sortAscBtn.on("click", function () {
        const isPressed = sortAscBtn.attr("aria-pressed") === "true";
        sortAscending();
        sortAscBtn.attr("aria-pressed", !isPressed);
        sortDescBtn.attr("aria-pressed", "false");
    });

    sortDescBtn.on("click", function () {
        const isPressed = sortDescBtn.attr("aria-pressed") === "true";
        sortDescending();
        sortDescBtn.attr("aria-pressed", !isPressed);
        sortAscBtn.attr("aria-pressed", "false");
    });

    // Accessibilité : Ajouter une étiquette pour le champ de recherche
    const searchInput = $("#searchSpeciality");
    const searchInputLabel = $('label[for="searchSpeciality"]');
    searchInputLabel.attr("id", "searchSpecialityLabel");
    searchInput.attr("aria-labelledby", "searchSpecialityLabel");

    // Gestion du filtre par lettre
    $("#filterLetter").on("change", function () {
        const letter = $(this).val();

        if (letter) {
            specialityItems.each(function () {
                const firstLetter = $(this).data("letter").charAt(0).toUpperCase();
                if (firstLetter === letter) {
                    $(this).css("display", "block");
                } else {
                    $(this).css("display", "none");
                }
            });
        } else {
            // Si aucune lettre sélectionnée, afficher tous les éléments
            specialityItems.css("display", "block");
        }
    });
});
</script>
