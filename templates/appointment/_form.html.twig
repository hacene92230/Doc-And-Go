{{ form_start(form) }}
<div id="dateTime" style="display: none;"> <!-- Masquer la div si vous ne voulez pas utiliser ce champ -->
    {{ form_row(form.dateTime, { 'attr': {'class': 'form-control'} }) }}
</div>
<div id="step1">
    {% for planning in doctor.planings %}
        <div class="interval-container" data-start-date="{{ planning.startDate|date('Y-m-d') }}" data-end-date="{{ planning.endDate|date('Y-m-d') }}">
            <h3>Du {{ planning.startDate|date('d/m/Y') }} au {{ planning.endDate|date('d/m/Y') }}</h3>
            <!-- Bouton pour afficher/masquer les dates -->
            <button class="btn btn-sm btn-primary afficher">Afficher</button>
            <div class="dates-container" style="display: none;">
                {% set currentDate = planning.startDate %}
                {% set endDateObj = planning.endDate %}
                {% set displayedDates = 0 %}
                {% for i in 0..endDateObj.diff(currentDate).days %}
                    {% set currentDate = planning.startDate|date_modify('+' ~ i ~ ' day') %}
                    <!-- Ajouter une classe pour les dates -->
                    <h5 class="date-selector" {% if displayedDates < 5 %} style="display: block;"{% else %} style="display: none;"{% endif %} data-date="{{ currentDate|date('Y-m-d') }}">{{ currentDate|date('d/m/Y') }}</h5>
                    {% set displayedDates = displayedDates + 1 %}
                {% endfor %}
                {% if displayedDates > 5 %}
                    <button class="btn btn-sm btn-primary voir-plus">Voir plus</button>
                {% endif %}
            </div>
        </div>
    {% endfor %}
    <button type="button" class="btn btn-primary" id="nextStep1">Suivant</button>
</div>
<div id="step2" style="display: none;">
    {{ form_label(form.comment, 'Commentaire') }}
    {{ form_row(form.comment, { 'attr': {'class': 'form-control', 'placeholder': 'Entrez votre commentaire ici'} }) }}

    <button type="button" class="btn btn-primary" id="prevStep2">Précédent</button>
    <button type="button" class="btn btn-primary" id="nextStep2">Suivant</button>
</div>
<div id="recapValidate" style="display: none;">
    <h3>Récapitulatif :</h3>
    <p>Date et heure du rendez-vous : <span id="recapDateTime"></span></p>
    <p>Commentaire : <span id="recapComment"></span></p>
    <button type="button" class="btn btn-primary" id="prevStepRecap">Précédent</button>
    <button type="submit" class="btn btn-primary">{{ button_label|default('Je confirme le rendez-vous') }}</button>
</div>
{{ form_end(form) }}

{% block javascripts %}
<script>
    document.addEventListener('DOMContentLoaded', function() {
        const step1 = document.getElementById('step1');
        const step2 = document.getElementById('step2');
        const recapValidate = document.getElementById('recapValidate');
        const nextStep1Btn = document.getElementById('nextStep1');
        const prevStep2Btn = document.getElementById('prevStep2');
        const nextStep2Btn = document.getElementById('nextStep2');
        const prevStepRecapBtn = document.getElementById('prevStepRecap');
        const recapDateTime = document.getElementById('recapDateTime');
        const recapComment = document.getElementById('recapComment');
        const dateTimeInput = document.getElementById('{{ form.dateTime.vars.id }}');
        const commentInput = document.getElementById('{{ form.comment.vars.id }}');

        // Passer de l'étape 1 à l'étape 2
        nextStep1Btn.addEventListener('click', function() {
            // Vérifier si une date a été sélectionnée
            if (dateTimeInput.value) {
                step1.style.display = 'none';
                step2.style.display = 'block';
            } else {
                alert('Veuillez sélectionner une date avant de passer à l\'étape suivante.');
            }
        });

        // Passer de l'étape 2 à l'étape 1
        prevStep2Btn.addEventListener('click', function() {
            step2.style.display = 'none';
            step1.style.display = 'block';
        });

        // Passer de l'étape 2 à l'étape recapValidate
        nextStep2Btn.addEventListener('click', function() {
            step2.style.display = 'none';
            recapValidate.style.display = 'block';
            recapDateTime.textContent = formatDate(dateTimeInput.value);
            recapComment.textContent = commentInput.value;
        });

        // Passer de l'étape recapValidate à l'étape 2
        prevStepRecapBtn.addEventListener('click', function() {
            recapValidate.style.display = 'none';
            step2.style.display = 'block';
        });

        // Gestion de l'affichage des dates
        const containers = document.querySelectorAll('.interval-container');
        containers.forEach(container => {
            const datesContainer = container.querySelector('.dates-container');
            const afficherBtn = container.querySelector('.afficher');
            const voirPlusBtn = container.querySelector('.voir-plus');

            afficherBtn.addEventListener('click', function() {
                if (datesContainer.style.display === 'none') {
                    datesContainer.style.display = 'block';
                    afficherBtn.textContent = 'Masquer';
                } else {
                    datesContainer.style.display = 'none';
                    afficherBtn.textContent = 'Afficher';
                }
            });

            voirPlusBtn.addEventListener('click', function() {
                const hiddenDates = datesContainer.querySelectorAll('h5[style="display: none;"]');
                let count = 0;
                hiddenDates.forEach(date => {
                    if (count < 5) {
                        date.style.display = 'block';
                        count++;
                    }
                });
                if (hiddenDates.length <= 5) {
                    voirPlusBtn.style.display = 'none';
                }
            });

            if (datesContainer.children.length > 5) {
                voirPlusBtn.style.display = 'inline-block';
            }
        });

        // Fonction pour formater la date au format "jour/mois/année"
        function formatDate(dateString) {
            const selectedDate = new Date(dateString);
            const day = selectedDate.getDate() < 10 ? '0' + selectedDate.getDate() : selectedDate.getDate();
            const month = (selectedDate.getMonth() + 1) < 10 ? '0' + (selectedDate.getMonth() + 1) : (selectedDate.getMonth() + 1);
            return `${day}/${month}/${selectedDate.getFullYear()}`;
        }

        // Ajout d'un gestionnaire d'événements pour les sélecteurs de date
        const dateSelectors = document.querySelectorAll('.date-selector');
        dateSelectors.forEach(dateSelector => {
            dateSelector.addEventListener('click', function() {
                const selectedDate = dateSelector.dataset.date;
                dateTimeInput.value = selectedDate; // Mettre à jour la valeur du champ dateTime
                // Afficher la date sélectionnée
                recapDateTime.textContent = formatDate(selectedDate);
            });
        });
    
    });
</script>
{% endblock %}
